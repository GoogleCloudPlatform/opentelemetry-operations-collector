import 'common.gcl' as common

config build = common.build {
  dockerfile_path =
      'git/otelcol-google/google-built-opentelemetry-collector/Dockerfile.image_with_gcloud.build'

  container_build_argument = [
    {
      key = 'PROJECT_ROOT'
      value = 'git/otelcol-google'
    },
    {
      key = 'BUILD_CONTAINER'
      value =
          'us-docker.pkg.dev/google.com/api-project-999119582588/go-boringcrypto-internal/golang@sha256:5e292c54d2d37534a367761cbc0b69b81d717c730f824e0f7abdcd54133e43f1'
    },
    {
      key = 'CERT_CONTAINER'
      value =
          'us-docker.pkg.dev/artifact-foundry-prod/docker-3p-trusted/golang@sha256:6e867e7a9b18808f61e7f1e8815535199f526bb227be340be6547f239a94228b'
    },
  ]
 // I'm not sure why, but this build doesn't seem to need container_properties;
  // null it out for now.
  container_properties = null

  container_artifact = [
    {
      // Path to the container tar file produced by the build. For a container build,
      // this should always be "container/container.tar"
      source = 'container/container.tar'
      destination = 'us-docker.pkg.dev/cloud-ops-agents-art-staging/google-cloud-opentelemetry-collector-staging/otelcol-google'
    },
    {
      // Path to the container tar file produced by the build. For a container build,
      // this should always be "container/container.tar"
      source = 'container/container.tar'
      destination = 'us-east1-docker.pkg.dev/cloud-ops-agents-art-staging/google-cloud-opentelemetry-collector-staging/otelcol-google'
    },
  ]
}
